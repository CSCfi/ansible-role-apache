---
# tasks file for apache
- name: Apache | Initialize
  include_vars: "{{ apache_item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "default.yml"
  when: __apache_packages is not defined or apache_service_name is not defined
  loop_control:
    loop_var: apache_item

- name: Apache | Define | Packages
  set_fact:
    apache_packages: "{{ __apache_packages | list }}"
  when: apache_packages is not defined

- name: Apache | Install
  package: name={{ apache_item }} state={{ apache_state }}
  with_items: "{{ apache_packages }}"
  loop_control:
    loop_var: apache_item

- name: Apache | Enable | Apache
  service:
    name: "{{ apache_service_name }}"
    state: started
    enabled: yes

- name: Apache | Enable | Modules | ssl, rewrite
  apache2_module: name={{ apache_item }} state=present
  with_items:
    - ssl
    - rewrite
  loop_control:
    loop_var: apache_item
  when: not (ansible_distribution == "RedHat" and ansible_distribution_major_version >= '9')

- name: RHEL9+ | Apache | Enable | Modules | ssl, rewrite
  shell: httpd -M | grep -q '{{ item }}_module' || echo 'LoadModule {{ item }}_module modules/mod_{{ item }}.so' >> /etc/httpd/conf.modules.d/00-base.conf
  loop:
    - ssl
    - rewrite
  loop_control:
    loop_var: item
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version >= '9'

#- name: Apache | BUGFIX | Comment out second include, otherwise already loaded errors
#  replace:
#    path: /etc/httpd/conf/httpd.conf
#    regexp: '(^IncludeOptional.*)'
#    replace: '#\1'

- name: Apache | Harden 
  lineinfile: dest="{{ apache_item.file }}" regexp="^{{ apache_item.option }}" line="{{ apache_item.option }} {{ apache_item.value }}" state=present
  with_items: "{{ apache_ssl_hardening_items2 }}"
  notify: restart apache
  loop_control:
    loop_var: apache_item

- name: Apache | Harden | SSL
  lineinfile: dest={{ apache_item.file }} regexp="^#?\s*({{ apache_item.option }})" backrefs=yes  line="\\1 {{ apache_item.value }}"
  with_items: "{{ apache_ssl_hardening_items }}"
  notify: restart apache 
  loop_control:
    loop_var: apache_item

- name: "{{ configurables }}"
  include_tasks: apache_{{ apache_item }}.yml
  with_items: "{{ configurables }}"
  when: configurables is defined and configurables!=""
  loop_control:
    loop_var: apache_item
